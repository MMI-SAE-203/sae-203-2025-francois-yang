---
import Layout from "../../layouts/Layout.astro";
import { getActiviteByID } from "../../../backend/backend.mjs";
import { formatDate } from "../../js/helper.js";
const { id } = Astro.params;
import "../../styles/global.css";

let activites = await getActiviteByID(id);

const invites = Array.isArray(activites.expand?.invite_lie)
  ? activites.expand.invite_lie
  : activites.expand?.invite_lie
    ? [activites.expand.invite_lie]
    : [];

const dateActivite = formatDate(activites.date_activite);
---

<Layout>
  <main class="max-w-4xl mx-auto px-4 py-8">
    <a
      href="/activites"
      class="text-yellow-600 hover:underline mb-6 inline-block items-center"
    >
    
      Retour à la liste des activités
    </a>

    <div class="bg-white rounded-lg shadow-lg overflow-hidden">
      <div class="p-6">
        <div class="flex justify-between items-start flex-wrap mb-4">
          <h1 class="text-3xl font-bold">{activites.nom}</h1>
          <span
            class="bg-orange-200 text-orange-800 text-bold px-3 py-1 rounded-full text-sm ml-2"
          >
            {activites.type_activite}
          </span>
        </div>

        <div class="flex flex-wrap gap-3 mb-6">
          <div class="flex items-center text-gray-700">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-5 w-5 mr-1"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"
              ></path>
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
            </svg>
            <span>{activites.lieu}</span>
          </div>

          <div class="flex items-center text-gray-700">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-5 w-5 mr-1"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
              ></path>
            </svg>
            <span>{dateActivite}</span>
          </div>

          <div class="flex items-center text-gray-700">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-5 w-5 mr-1"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            <span
              >{activites.duree_heure} heure{
                activites.duree_heure > 1 ? "s" : ""
              }</span
            >
          </div>
        </div>

        <div class="mb-8">
          <h3 class="text-xl font-semibold mb-2">Description</h3>
          <p class="text-gray-700 whitespace-pre-line">
            {activites.description}
          </p>
        </div>

        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
          {
            invites.map((invite) => (
              <a
                href={`/invites/${invite.id}`}
                class="block transition-transform hover:scale-105"
              >
                <div class="bg-white rounded-lg shadow-md overflow-hidden">
                  {invite.photo && (
                    <img
                      src={`http://127.0.0.1:8090/api/files/invite/${invite.id}/${invite.photo}`}
                      alt={`${invite.prenom} ${invite.nom}`}
                      class="w-full h-48 object-cover"
                    />
                  )}
                  <div class="p-4">
                    <h3 class="font-bold text-lg">
                      {invite.prenom} {invite.nom}
                    </h3>
                    {invite.role && <p class="text-gray-600">{invite.role}</p>}
                    {invite.nationalite && (
                      <p class="text-sm text-gray-500 mt-1">
                        {invite.nationalite}
                      </p>
                    )}
                    <div class="mt-3 text-yellow-600 text-sm">
                      Voir le profil complet →
                    </div>
                  </div>
                </div>
              </a>
            ))
          }
        </div>
      </div>
    </div>
  </main>
  </Layout
>
